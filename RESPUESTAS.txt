1. Para cumplir con las condiciones del primer punto, agregamos la anotacion de @Service a la clase de InMemoryBlueprintPersistence,
ya que en la clase BlueprintServices existian ya las anotaciones de @Service y @Autowired en la variable de
BlueprintPersistence que es una interfaz que se implementa en la clase de InMemoryBlueprintPersistence.

2. Explicacion con imagenes en el documento de word.

3. Se creo la clase Main dentro de edu.eci.arsw.blueprints.ui y desde alli se ejecuta con las funcione de consulta y
registro de blueprints.

4. Se crea la clase de FiltersPersistence como una interfaz, ademas se crean las dos clases de FilterSubsampling y
FilterRedundancies implementando la interfaz. Se agrega el parametro del filtro a BlueprintServices con la etiqueta
@Autowired y @Service a alguna de las clases de filtros.

5. Se implementaron las pruebas respectivamente con el nombre de la clase a probar para cada filtro. Es importante
resaltar que el filtro de Subsampling empieza eliminando puntos, es decir elimina las posiciones impares.